{"version":3,"file":"component---src-pages-attend-tsx-48d5ea7d98321af40258.js","mappings":"4LAcMA,EAASC,EAAAA,QAAAA,OAAAA,WAAH,yDAAGA,CAAH,2KAEIC,EAAAA,GAAY,KACA,EAAVA,EAAAA,GAAc,KACH,EAAVA,EAAAA,GAAc,KAEtBC,EAAAA,EAAAA,QAUEA,EAAAA,EAAAA,SAMAC,EAAUH,EAAAA,QAAAA,QAAAA,WAAH,0DAAGA,CAAH,mHACJC,EAAAA,GAAY,KACA,EAAVA,EAAAA,GAAc,KACH,EAAVA,EAAAA,GAAc,KACtBC,EAAAA,EAAAA,SAuCX,IAvBsC,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChD,OACI,gBAAC,EAAAC,cAAD,CAAeC,MAAOC,EAAAA,IAClB,gBAAC,IAAD,MACI,uCAAeJ,GACf,uBAAKK,MAAO,CACJC,OAAQ,OACRC,UAAW,SAEf,gBAAC,IAAD,MACA,gBAACZ,EAAD,KACI,0BAAKK,GACL,6BAEJ,gBAACD,EAAD,KAAUE,IAGd,gBAAC,IAAD,S,2GCnEVO,EAAiBZ,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,sRAaXE,EAAAA,EAAAA,WAeHW,EAAgBb,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,+LAINE,EAAAA,EAAAA,WAYPY,EAAYd,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,kUAOOe,EAAAA,GAaDb,EAAAA,EAAAA,WASIc,EAAAA,IA4CzB,EA5B0C,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzC,OACI,gBAACL,EAAD,KACI,gBAACC,EAAD,KACI,4CACA,gDAEJ,0BAEII,EAAKC,wBAAwBC,MAAMC,KAAI,SAACC,GAAD,OACnC,gBAACP,EAAD,CAAYQ,IAAKD,EAAKE,IAClB,qBAAGC,KAAK,KACJ,4BAAOH,EAAKI,YACZ,2BACI,4BAAOJ,EAAKK,eACZ,2BACA,4BApBf,aAoB+BC,OAAOC,EAAYP,EAAKQ,iBAelED,EAAc,SAACE,GACjB,IAAIC,EAAY,GAChB,GAAe,KAAXD,EAAK,GAGe,MAFpBC,EAAYD,EAAKE,MAAM,EAAG,IAEZ,KACVD,EAAYA,EAAUC,MAAM,IAGhCD,EAAYA,EAAUJ,OAAO,aAE5B,CACD,IAAIM,EAASH,EAAK,GAAGH,OAAO,QAC5B,GAAe,KAAXG,EAAK,GAAW,CAEhBG,GADU,KACYN,OAAOG,EAAKE,MAAM,EAAE,GAAGL,OAAO,UAExDI,EAAYE,EAIhB,OAAOF,G,UC1ILG,EAAQlC,EAAAA,QAAAA,GAAAA,WAAH,wDAAGA,CAAH,+BACFE,EAAAA,EAAAA,WAyCT,EA/B8C,SAAC,GAAc,IAAZe,EAAW,EAAXA,KAE7C,OADAkB,QAAQC,IAAI,YAAanB,GAErB,gBAAC,IAAD,CACAb,UAAU,UAGH,gBAAC8B,EAAD,2KAGA,gBAAC,EAAD,CAAUjB,KAAMA","sources":["webpack://my-gatsby-site/./src/components/navigation/layout.tsx","webpack://my-gatsby-site/./src/components/attend/schedule.tsx","webpack://my-gatsby-site/./src/pages/attend.tsx"],"sourcesContent":["import React from 'react';\nimport NavBar from './navBar';\nimport mainTheme from 'styles/theme'\nimport styled, { ThemeProvider} from 'styled-components'\nimport { GlobalStyle } from 'styles/globalStyles'\nimport {edgeSpace } from 'styles/theme';\nimport Footer from './footer';\nimport { devices } from 'styles/responsiveSizes';\n\n\n// const Body = styled.body`\n//   padding-left: ${edgePadding};\n//   padding-right: 10em;\n// `;\nconst Header = styled.header`\n  /* background-color: rebeccapurple; */\n  margin-top: ${edgeSpace + \"em\"};;\n  padding-left: ${edgeSpace*2 + \"em\"};\n  padding-right: ${edgeSpace*2 + \"em\"};\n  /* border-bottom: 1px solid rgba(255,255,255,.25); */\n  @media ${devices.mobileL} {\n    padding: 0;\n    margin: auto;\n    width: 70%;\n  }\n\n  div {\n    height: 1px;\n    width: 50%;\n    background-color: white;\n    @media ${devices.mobileL} {\n        width: 80%;\n  }\n}\n`\n\nexport const Section = styled.section`\n  margin-top: ${edgeSpace + \"em\"};\n  padding-left: ${edgeSpace*2 + \"em\"};\n  padding-right: ${edgeSpace*2 + \"em\"};\n  @media ${devices.mobileL} {\n    padding: 0;\n    margin: auto;\n    width: 70%;\n    margin-top: 20px;\n  }\n`;\n\n\n\ninterface LayoutProps {\n    pageTitle:string;\n    children: React.ReactNode\n    // : string;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }) => {\n    return (\n        <ThemeProvider theme={mainTheme}>\n            <GlobalStyle/>\n                <title>SABF - {pageTitle}</title>\n                <div style={{\n                        height: \"100%\",\n                        minHeight: \"90vh\"\n                    }}>\n                    <NavBar></NavBar>\n                    <Header>\n                        <h1>{pageTitle}</h1>\n                        <div></div>\n                    </Header>\n                    <Section>{children}</Section>\n                    \n                </div>\n                <Footer></Footer>\n            \n        </ThemeProvider>\n    );\n};\n\nexport default Layout;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { devices } from 'styles/responsiveSizes';\nimport { primaryAccentColor, secondaryAccentColor } from 'styles/theme';\nimport { AttendPageQueryQuery } from '../../../graphql-types';\n\nconst ScheduleHolder = styled.div`\n\nul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\na {\n    color: inherit;\n    text-decoration: none;\n    display: block;\n}\n\n@media ${devices.laptopMin} {\n    max-width: 90%;\n    /* margin: auto; */\n    display: flex;\n    flex-direction: row;\n    ul {\n        display: grid;\n        grid-auto-flow: column;\n        grid-template-columns: repeat(2,1fr);\n        grid-template-rows: repeat(11, 1fr);\n        column-gap:2em;\n    }\n}\n`;\n\nconst ScheduleTitle = styled.div`\n    border-bottom: 1px solid #ccc;\n    margin-bottom: 3px;\n    font-size: large;\n    @media ${devices.laptopMin} {\n        max-width: 14vw;\n        padding-top: 5px;\n        padding-right: 10px;\n        border-right: 1px solid #ccc;\n        margin-right: 1em;\n        border-bottom: 0;\n\n    }\n  \n`;\n\nconst EventItem = styled.div`\n    padding: 10px;\n    border-bottom: 1px dashed #ccc;\n    line-height: 22px;\n    transition: ease .4s all;\n\n    :hover {\n        background: ${secondaryAccentColor};\n    }\n\n    a {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n\n        span:nth-of-type(1) {\n            /* flex-grow: 1; */\n            min-width: 42px;\n            font-weight: bold;\n\n            @media ${devices.mobileLMin} {\n                min-width: 3em;\n            \n        }\n            /* margin-right: 5px; */\n        }\n        div:nth-of-type(1) {\n            /* flex-grow: 2; */\n            span:nth-of-type(2){\n                color: ${primaryAccentColor};\n                font-size: smaller;\n            }\n        }\n    }\n    \n`\n\ninterface ScheduleProps {\n    data: AttendPageQueryQuery\n}\n\nconst Duration = \"Duration: \"\n\n\n\nconst Schedule: React.FC<ScheduleProps> = ({ data }) => {\n    return (\n        <ScheduleHolder>\n            <ScheduleTitle> \n                <h2>April 16, 2022</h2>\n                <p>Schedule of Events</p> \n            </ScheduleTitle>\n            <ul>\n            {\n                data.allConfernceScheduleCsv.nodes.map((item) => (\n                    <EventItem  key={item.id}>\n                        <a href=\"/\">\n                            <span>{item.Start_time}</span>\n                            <div>\n                                <span>{item.Schedule_name}</span>\n                                <br/>\n                                <span>{Duration.concat(dateTrimmer(item.Mins))}</span>\n                            </div>\n                        </a>\n                    </EventItem >\n                    \n                ))\n            }\n            </ul>\n        </ScheduleHolder>\n    );\n};\n\nexport default Schedule;\n\n\nconst dateTrimmer = (time:string) => {\n    let shortTime = \"\"\n    if (time[0] == \"0\") {\n        shortTime = time.slice(2, 4)\n\n        if (shortTime[0] == \"0\") {\n            shortTime = shortTime.slice(1)\n        }\n\n        shortTime = shortTime.concat(\" mins\")\n    }\n    else {\n        let time01 = time[0].concat(\" hrs\")\n        if (time[2] != \"0\") {\n            let mid = \", \"\n            time01 = time01 + mid.concat(time.slice(2,4).concat(\" mins\"))\n        }\n        shortTime = time01\n\n    }\n\n    return shortTime\n}","import Schedule from 'components/attend/schedule';\nimport Layout from 'components/navigation/layout';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { devices } from 'styles/responsiveSizes';\n\nimport { AttendPageQueryQuery } from '../../graphql-types';\n\nconst Blurb = styled.h3`\n@media ${devices.laptopMin} {\n    max-width: 80%;\n}\n  \n`;\n\ninterface AttendPageProps {\n    data: AttendPageQueryQuery\n}\n\nconst AttendPage: React.FC<AttendPageProps> = ({ data }) => {\n    console.log(\"hi attend\", data)\n    return (\n        <Layout\n        pageTitle='Attend'\n       >\n \n               <Blurb>We look forward to bringing you an exciting host of events. \n                   Registration links for the Forum (online), and Gala and Afterparty (in-person) will be available soon. \n                </Blurb>\n               <Schedule data={data}></Schedule>\n\n       </Layout>\n    );\n};\n\nexport const query = graphql`\n  query AttendPageQuery {\n  allConfernceScheduleCsv {\n    nodes {\n      End_time\n      Mins\n      Schedule_name\n      Start_time\n      id\n    }\n  }\n}\n\n`\n\nexport default AttendPage;\n"],"names":["Header","styled","edgeSpace","devices","Section","pageTitle","children","ThemeProvider","theme","mainTheme","style","height","minHeight","ScheduleHolder","ScheduleTitle","EventItem","secondaryAccentColor","primaryAccentColor","data","allConfernceScheduleCsv","nodes","map","item","key","id","href","Start_time","Schedule_name","concat","dateTrimmer","Mins","time","shortTime","slice","time01","Blurb","console","log"],"sourceRoot":""}