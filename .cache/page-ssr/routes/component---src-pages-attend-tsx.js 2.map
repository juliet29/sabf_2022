{"version":3,"file":"component---src-pages-attend-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;CAIA;AACA;AACA;AACA;;AACA,MAAMO,MAAM,GAAGJ,2EAAH;AAAA;AAAA,gHAEIG,mDAAS,GAAG,IAFhB,EAGMA,mDAAS,GAAG,IAHlB,EAIOA,mDAAS,GAAG,IAJnB,CAAZ;;AAsBA,MAAMG,MAA6B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAC/D,sBACI,2DAAC,4DAAD;AAAe,SAAK,EAAET,oDAASA;AAA/B,kBACI,2DAAC,4DAAD,OADJ,eAEI,sFACI,0EAAQQ,SAAR,CADJ,eAEI,sFACI,2DAAC,+CAAD,OADJ,eAEI,2DAAC,MAAD,qBACI,uEAAKA,SAAL,CADJ,eAEI,uEAFJ,CAFJ,EAOKC,QAPL,CAFJ,CAFJ,CADJ;AAiBH,CAlBD;;AAoBA,iEAAeF,MAAf;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AAQA,MAAMI,SAAS,GAAGV,wEAAH;AAAA;AAAA,gHAAf;AAcA,MAAMY,SAAS,GAAGZ,wEAAH;AAAA;AAAA,sEAAf;AAOA,MAAMc,UAAU,GAAGd,wEAAH;AAAA;AAAA,sEAAhB;AAOO,MAAMe,OAAO,GAAGf,6DAAM,CAACS,wCAAD,CAAT;AAAA;AAAA,8EAAb;;AASP,MAAMX,MAA6B,GAAG,CAAC,EAAD,KAAU;AAC5C,sBACI,2DAAC,SAAD,qBACI,2DAAC,SAAD,qBACA,qFACA,2DAAC,OAAD;AAAS,MAAE,EAAC;AAAZ,YADA,CADA,eAIA,2DAAC,UAAD,qBACI,2DAAC,OAAD;AAAS,MAAE,EAAC;AAAZ,sBADJ,eAEI,2DAAC,OAAD;AAAS,MAAE,EAAC;AAAZ,yBAFJ,eAGI,2DAAC,OAAD;AAAS,MAAE,EAAC;AAAZ,yBAHJ,eAII,2DAAC,OAAD;AAAS,MAAE,EAAC;AAAZ,cAJJ,CAJA,CADJ,CADJ;AAiBH,CAlBD;;AAoBA,iEAAeA,MAAf;;;;;;;;;;;;;;;;;ACnEA;AACA;;AAMA,MAAMkB,UAAqC,GAAG,CAAC,EAAD,KAAU;AACpD,sBACI,2DAAC,oEAAD;AACA,aAAS,EAAC;AADV,kBAGC,iFAHD,CADJ;AAOH,CARD;;AAUA,iEAAeA,UAAf;;;;;;;;;;;;;;;;ACjBA;AACA;AAEO,MAAMd,WAAW,GAAGe,oEAAH,uTAGFC,6CAHE,EAIPC,8CAJO,CAAjB;;;;;;;;;;;;;;;;;;;ACAP;AACO,MAAMD,SAAS,GAAG,SAAlB,EAA4B;;AAC5B,MAAME,UAAU,GAAG,SAAnB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMF,UAAU,GAAG,8BAAnB;AACA,MAAMhB,SAAS,GAAE,CAAjB;AAEP,MAAMJ,SAAuB,GAAG;AAC5BuB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEL,SADC;AAEPM,IAAAA,KAAK,EAAEJ,UAFA;AAGPK,IAAAA,KAAK,EAAE;AAHA,GADmB;AAM5BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAER;AADJ;AANsB,CAAhC;AAeC,iEAAepB,SAAf","sources":["webpack://my-gatsby-site/./src/components/navigation/layout.tsx","webpack://my-gatsby-site/./src/components/navigation/navBar.tsx","webpack://my-gatsby-site/./src/pages/attend.tsx","webpack://my-gatsby-site/./src/styles/globalStyles.ts","webpack://my-gatsby-site/./src/styles/theme.ts"],"sourcesContent":["import React from 'react';\nimport NavBar from './navBar';\nimport mainTheme from 'styles/theme'\nimport styled, { ThemeProvider} from 'styled-components'\nimport { GlobalStyle } from 'styles/globalStyles'\nimport {edgeSpace } from 'styles/theme';\n\n\n// const Body = styled.body`\n//   padding-left: ${edgePadding};\n//   padding-right: 10em;\n// `;\nconst Header = styled.header`\n  /* background-color: rebeccapurple; */\n  margin-top: ${edgeSpace + \"em\"};;\n  padding-left: ${edgeSpace + \"em\"};\n  padding-right: ${edgeSpace + \"em\"};\n  /* border-bottom: 1px solid rgba(255,255,255,.25); */\n\n  div {\n    height: 1px;\n    width: 50%;\n    background-color: white;\n  }\n`;\n\n\n\ninterface LayoutProps {\n    pageTitle:string;\n    children: React.ReactNode\n    // : string;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }) => {\n    return (\n        <ThemeProvider theme={mainTheme}>\n            <GlobalStyle/>\n            <html>\n                <title>{pageTitle}</title>\n                <body>\n                    <NavBar></NavBar>\n                    <Header>\n                        <h1>{pageTitle}</h1>\n                        <div></div>\n                    </Header>\n                    \n                    {children}\n                </body>\n            </html>\n        </ThemeProvider>\n    );\n};\n\nexport default Layout;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SectionSeperator } from 'styles/sharedStyles';\nimport {lightColor} from 'styles/theme'\n\ninterface NavBarProps {\n    // : string;\n}\n\nconst NavBarNav = styled.nav`\n  /* background-color: orange; */\n  z-index: 100;\n  padding-top: 2em;\n  padding-bottom: 2em;\n  padding-left: 1em;\n  padding-right: 1em;\n  position: sticky;\n  top: 0;\n  /* position: absolute;\n  display: flex;\n flex-direction: column; */\n`;\n\nconst NavBarDiv = styled.div`\n display: flex;\n flex-direction: row;\n justify-content: space-between;\n  \n`;\n\nconst NavMenuDiv = styled.div`\n display: flex;\n flex-direction: row;\n justify-content: space-between;\n  \n`;\n\nexport const NavLink = styled(Link)`\n  color: lightblue;\n  margin-left: 1em;\n  margin-right: 1em;\n  text-decoration: none;\n\n`;\n\n\nconst NavBar: React.FC<NavBarProps> = ({  }) => {\n    return (\n        <NavBarNav>\n            <NavBarDiv>\n            <div>\n            <NavLink to=\"/\">Logo</NavLink>\n            </div>\n            <NavMenuDiv>\n                <NavLink to=\"/press\">Press + Videos</NavLink>\n                <NavLink to=\"/pitch\">Pitch Competition</NavLink>\n                <NavLink to=\"/speakers\">Speakers + Panels</NavLink>\n                <NavLink to=\"/attend\">Attend</NavLink>\n            </NavMenuDiv>\n        </NavBarDiv>\n        {/* <SectionSeperator></SectionSeperator> */}\n        </NavBarNav>\n        \n    );\n};\n\nexport default NavBar;\n","import Layout from 'components/navigation/layout';\nimport React from 'react';\n\ninterface AttendPageProps {\n    // : string;\n}\n\nconst AttendPage: React.FC<AttendPageProps> = ({  }) => {\n    return (\n        <Layout\n        pageTitle='Attend'\n       >\n         <h1>Attend!</h1>\n       </Layout>\n    );\n};\n\nexport default AttendPage;\n","import { createGlobalStyle } from 'styled-components'\nimport { darkColor, fontFamily } from './theme'\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  background-color: ${darkColor};\n  font-family: ${fontFamily};\n  color: white;\n  /* margin: 20px; */\n\n}\n\nbody {\n  margin: 0;\n  /* padding: 20px; */\n}\n\n/* Declare text styles */\nh1, h2, p, a {\n  /* Font minimum, preferred and maximum value */\n  font-size: clamp(var(--min), var(--val), var(--max));\n  margin: 0;\n  font-weight: normal;\n}\n\na {\n  text-decoration: underline;\n}\n\n/* Font size variables */\nh1 {\n  --min: 2em; /* minimum value */\n  --val: 5vw; /* preferred value = 5% viewport width */\n  --max: 3em; /* maximum value */\n}\nh2 {\n  --min: 1.5em;   /* minimum value */\n  --val: 2vw;     /* preferred value = 4% viewport width */\n  --max: 2.25em;  /* maximum value */\n}\np, a {\n  --min: 0.8em;   /* minimum value */\n  --val: 1.2vw; /* preferred value = 2.5% viewport width */\n  --max: 1.5em; /* maximum value */\n}\n\n\n\n`","import { DefaultTheme } from 'styled-components';\n\n\n// hack untill figure out problem with global styles and typescript...\nexport const darkColor = \"#000000\" // '#1e1e1e' //\"#000000\"\nexport const lightColor = '#00021f'\nexport const skyBlue = \"#7DC9EC\"\nexport const fontFamily = 'Arial, Helvetica, sans-serif'\nexport const edgeSpace= 2\n\nconst mainTheme: DefaultTheme = {\n    palette: {\n      dark: darkColor,\n      light: lightColor,\n      white: \"#fff\"\n    },\n    font: {\n        sans: fontFamily\n    }\n  }\n\n\n\n\n \n export default mainTheme"],"names":["React","NavBar","mainTheme","styled","ThemeProvider","GlobalStyle","edgeSpace","Header","header","Layout","pageTitle","children","Link","NavBarNav","nav","NavBarDiv","div","NavMenuDiv","NavLink","AttendPage","createGlobalStyle","darkColor","fontFamily","lightColor","skyBlue","palette","dark","light","white","font","sans"],"sourceRoot":""}